@model BugTracker.Models.CreateBugViewModel

@{
    ViewBag.Title = "Create";
    SelectList projects = ViewBag.ProjectId;
    SelectList statusList = ViewBag.StatusList;
    SelectList priorityList = ViewBag.PriorityList;
}

<h2>Create</h2>

@using (Html.BeginForm(new { returnAction = ViewBag.ReturnAction }))
{
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>Bug</legend>

        <div class="display-label">
            @Html.LabelFor(model => model.DiscoverDate)
        </div>
        <div class="display-field">
            @Html.DisplayFor(model => model.DiscoverDate)
        </div>

        <div class="display-label">
            @Html.LabelFor(model => model.TesterName)
        </div>
        <div class="display-field">
            @Html.DisplayFor(model => model.TesterName)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ProjectId, "Project")
        </div>
        <div class="editor-field">
            @Html.DropDownList("ProjectId", projects)
            @Html.ValidationMessageFor(model => model.ProjectId)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Status)
        </div>
        <div class="display-field">
            @Html.DisplayFor(model => model.Status)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Priority)
        </div>
        <div class="editor-field">
            @Html.DropDownList("Priority", priorityList)
            @Html.ValidationMessageFor(model => model.Priority)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Description)
        </div>
        <div class="textarea-field">
            @Html.TextAreaFor(model => model.Description)
            @Html.ValidationMessageFor(model => model.Description)
        </div>

        <p>
            <input type="submit" value="Add Bug" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Cancel", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
